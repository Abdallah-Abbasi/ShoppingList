import mongoose from "mongoose";
import validator from "validator";
import uniqid from "uniqid";
const { Schema } = mongoose;

const userSchema = new Schema(
  {
    firstName: {
      type: String,
      required: true,
    },
    lastName: {
      type: String,
      required: true,
    },
    email: {
      type: String,
      required: true,
      trim: true,
      lowercase: true,
      unique: true,
      validate(value) {
        if (!validator.isEmail(value)) {
          throw new Error("Invalid email address");
        }
      },
    },
    password: {
      type: String,
      required: true,
      select: false, // exclude by default
    },
    img: {
      type: String,
      required: false,
    },
    idNumber: {
      type: String,
      // The time() method of the uniqid package generates a unique ID based on the current time in milliseconds. This means that each ID generated by this method will be unique, as long as the requests to create new users are not made within the same millisecond.
      default: function () {
        return uniqid.time();
      },
      unique: true,
    },
  },
  {
    timestamps: true,
  }
);

export default mongoose.model("User", userSchema);
